#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SisApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SisApp")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertVentaProducto(VentaProducto instance);
    partial void UpdateVentaProducto(VentaProducto instance);
    partial void DeleteVentaProducto(VentaProducto instance);
    partial void InsertVenta(Venta instance);
    partial void UpdateVenta(Venta instance);
    partial void DeleteVenta(Venta instance);
    partial void InsertCaja(Caja instance);
    partial void UpdateCaja(Caja instance);
    partial void DeleteCaja(Caja instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertAlmacenProducto(AlmacenProducto instance);
    partial void UpdateAlmacenProducto(AlmacenProducto instance);
    partial void DeleteAlmacenProducto(AlmacenProducto instance);
    partial void InsertAlmacen(Almacen instance);
    partial void UpdateAlmacen(Almacen instance);
    partial void DeleteAlmacen(Almacen instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::SisApp.Properties.Settings.Default.SisAppConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<VentaProducto> VentaProducto
		{
			get
			{
				return this.GetTable<VentaProducto>();
			}
		}
		
		public System.Data.Linq.Table<Venta> Venta
		{
			get
			{
				return this.GetTable<Venta>();
			}
		}
		
		public System.Data.Linq.Table<Caja> Caja
		{
			get
			{
				return this.GetTable<Caja>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<AlmacenProducto> AlmacenProducto
		{
			get
			{
				return this.GetTable<AlmacenProducto>();
			}
		}
		
		public System.Data.Linq.Table<Almacen> Almacen
		{
			get
			{
				return this.GetTable<Almacen>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Cedula;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Direccion;
		
		private string _Email;
		
		private string _Telefono;
		
		private EntitySet<Venta> _Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Cliente()
		{
			this._Venta = new EntitySet<Venta>(new Action<Venta>(this.attach_Venta), new Action<Venta>(this.detach_Venta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Venta", ThisKey="Id", OtherKey="ClienteId")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Categoria()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Producto", ThisKey="Id", OtherKey="CategoriaId")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VentaProducto")]
	public partial class VentaProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _VentaId;
		
		private int _ProductoId;
		
		private System.Nullable<int> _Cantidad;
		
		private string _Producto;
		
		private System.Nullable<decimal> _ValorUnidad;
		
		private System.Nullable<decimal> _ValorTotal;
		
		private EntityRef<Venta> _Venta;
		
		private EntityRef<Producto> _Producto1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVentaIdChanging(int value);
    partial void OnVentaIdChanged();
    partial void OnProductoIdChanging(int value);
    partial void OnProductoIdChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    partial void OnProductoChanging(string value);
    partial void OnProductoChanged();
    partial void OnValorUnidadChanging(System.Nullable<decimal> value);
    partial void OnValorUnidadChanged();
    partial void OnValorTotalChanging(System.Nullable<decimal> value);
    partial void OnValorTotalChanged();
    #endregion
		
		public VentaProducto()
		{
			this._Venta = default(EntityRef<Venta>);
			this._Producto1 = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VentaId", DbType="Int NOT NULL")]
		public int VentaId
		{
			get
			{
				return this._VentaId;
			}
			set
			{
				if ((this._VentaId != value))
				{
					if (this._Venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVentaIdChanging(value);
					this.SendPropertyChanging();
					this._VentaId = value;
					this.SendPropertyChanged("VentaId");
					this.OnVentaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoId", DbType="Int NOT NULL")]
		public int ProductoId
		{
			get
			{
				return this._ProductoId;
			}
			set
			{
				if ((this._ProductoId != value))
				{
					if (this._Producto1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductoIdChanging(value);
					this.SendPropertyChanging();
					this._ProductoId = value;
					this.SendPropertyChanged("ProductoId");
					this.OnProductoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producto", DbType="NVarChar(100)")]
		public string Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				if ((this._Producto != value))
				{
					this.OnProductoChanging(value);
					this.SendPropertyChanging();
					this._Producto = value;
					this.SendPropertyChanged("Producto");
					this.OnProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorUnidad", DbType="Money")]
		public System.Nullable<decimal> ValorUnidad
		{
			get
			{
				return this._ValorUnidad;
			}
			set
			{
				if ((this._ValorUnidad != value))
				{
					this.OnValorUnidadChanging(value);
					this.SendPropertyChanging();
					this._ValorUnidad = value;
					this.SendPropertyChanged("ValorUnidad");
					this.OnValorUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorTotal", DbType="Money")]
		public System.Nullable<decimal> ValorTotal
		{
			get
			{
				return this._ValorTotal;
			}
			set
			{
				if ((this._ValorTotal != value))
				{
					this.OnValorTotalChanging(value);
					this.SendPropertyChanging();
					this._ValorTotal = value;
					this.SendPropertyChanged("ValorTotal");
					this.OnValorTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_VentaProducto", Storage="_Venta", ThisKey="VentaId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Venta Venta
		{
			get
			{
				return this._Venta.Entity;
			}
			set
			{
				Venta previousValue = this._Venta.Entity;
				if (((previousValue != value) 
							|| (this._Venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venta.Entity = null;
						previousValue.VentaProducto.Remove(this);
					}
					this._Venta.Entity = value;
					if ((value != null))
					{
						value.VentaProducto.Add(this);
						this._VentaId = value.Id;
					}
					else
					{
						this._VentaId = default(int);
					}
					this.SendPropertyChanged("Venta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_VentaProducto", Storage="_Producto1", ThisKey="ProductoId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Producto Producto1
		{
			get
			{
				return this._Producto1.Entity;
			}
			set
			{
				Producto previousValue = this._Producto1.Entity;
				if (((previousValue != value) 
							|| (this._Producto1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto1.Entity = null;
						previousValue.VentaProducto.Remove(this);
					}
					this._Producto1.Entity = value;
					if ((value != null))
					{
						value.VentaProducto.Add(this);
						this._ProductoId = value.Id;
					}
					else
					{
						this._ProductoId = default(int);
					}
					this.SendPropertyChanged("Producto1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venta")]
	public partial class Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _ClienteId;
		
		private System.Nullable<System.DateTime> _FechaId;
		
		private System.Nullable<decimal> _TotalFactura;
		
		private System.Nullable<decimal> _SubTotal;
		
		private System.Nullable<decimal> _Iva;
		
		private System.Nullable<decimal> _Descuento;
		
		private System.Nullable<decimal> _Efectivo;
		
		private System.Nullable<decimal> _Cambio;
		
		private System.Nullable<int> _CajaId;
		
		private EntitySet<VentaProducto> _VentaProducto;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Caja> _Caja;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnClienteIdChanging(int value);
    partial void OnClienteIdChanged();
    partial void OnFechaIdChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaIdChanged();
    partial void OnTotalFacturaChanging(System.Nullable<decimal> value);
    partial void OnTotalFacturaChanged();
    partial void OnSubTotalChanging(System.Nullable<decimal> value);
    partial void OnSubTotalChanged();
    partial void OnIvaChanging(System.Nullable<decimal> value);
    partial void OnIvaChanged();
    partial void OnDescuentoChanging(System.Nullable<decimal> value);
    partial void OnDescuentoChanged();
    partial void OnEfectivoChanging(System.Nullable<decimal> value);
    partial void OnEfectivoChanged();
    partial void OnCambioChanging(System.Nullable<decimal> value);
    partial void OnCambioChanged();
    partial void OnCajaIdChanging(System.Nullable<int> value);
    partial void OnCajaIdChanged();
    #endregion
		
		public Venta()
		{
			this._VentaProducto = new EntitySet<VentaProducto>(new Action<VentaProducto>(this.attach_VentaProducto), new Action<VentaProducto>(this.detach_VentaProducto));
			this._Cliente = default(EntityRef<Cliente>);
			this._Caja = default(EntityRef<Caja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", DbType="Int NOT NULL")]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIdChanging(value);
					this.SendPropertyChanging();
					this._ClienteId = value;
					this.SendPropertyChanged("ClienteId");
					this.OnClienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaId", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaId
		{
			get
			{
				return this._FechaId;
			}
			set
			{
				if ((this._FechaId != value))
				{
					this.OnFechaIdChanging(value);
					this.SendPropertyChanging();
					this._FechaId = value;
					this.SendPropertyChanged("FechaId");
					this.OnFechaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFactura", DbType="Money")]
		public System.Nullable<decimal> TotalFactura
		{
			get
			{
				return this._TotalFactura;
			}
			set
			{
				if ((this._TotalFactura != value))
				{
					this.OnTotalFacturaChanging(value);
					this.SendPropertyChanging();
					this._TotalFactura = value;
					this.SendPropertyChanged("TotalFactura");
					this.OnTotalFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money")]
		public System.Nullable<decimal> SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iva", DbType="Money")]
		public System.Nullable<decimal> Iva
		{
			get
			{
				return this._Iva;
			}
			set
			{
				if ((this._Iva != value))
				{
					this.OnIvaChanging(value);
					this.SendPropertyChanging();
					this._Iva = value;
					this.SendPropertyChanged("Iva");
					this.OnIvaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Money")]
		public System.Nullable<decimal> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Efectivo", DbType="Money")]
		public System.Nullable<decimal> Efectivo
		{
			get
			{
				return this._Efectivo;
			}
			set
			{
				if ((this._Efectivo != value))
				{
					this.OnEfectivoChanging(value);
					this.SendPropertyChanging();
					this._Efectivo = value;
					this.SendPropertyChanged("Efectivo");
					this.OnEfectivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cambio", DbType="Money")]
		public System.Nullable<decimal> Cambio
		{
			get
			{
				return this._Cambio;
			}
			set
			{
				if ((this._Cambio != value))
				{
					this.OnCambioChanging(value);
					this.SendPropertyChanging();
					this._Cambio = value;
					this.SendPropertyChanged("Cambio");
					this.OnCambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CajaId", DbType="Int")]
		public System.Nullable<int> CajaId
		{
			get
			{
				return this._CajaId;
			}
			set
			{
				if ((this._CajaId != value))
				{
					if (this._Caja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCajaIdChanging(value);
					this.SendPropertyChanging();
					this._CajaId = value;
					this.SendPropertyChanged("CajaId");
					this.OnCajaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_VentaProducto", Storage="_VentaProducto", ThisKey="Id", OtherKey="VentaId")]
		public EntitySet<VentaProducto> VentaProducto
		{
			get
			{
				return this._VentaProducto;
			}
			set
			{
				this._VentaProducto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Cliente", ThisKey="ClienteId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._ClienteId = value.Id;
					}
					else
					{
						this._ClienteId = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Caja_Venta", Storage="_Caja", ThisKey="CajaId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Caja Caja
		{
			get
			{
				return this._Caja.Entity;
			}
			set
			{
				Caja previousValue = this._Caja.Entity;
				if (((previousValue != value) 
							|| (this._Caja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Caja.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Caja.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._CajaId = value.Id;
					}
					else
					{
						this._CajaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Caja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VentaProducto(VentaProducto entity)
		{
			this.SendPropertyChanging();
			entity.Venta = this;
		}
		
		private void detach_VentaProducto(VentaProducto entity)
		{
			this.SendPropertyChanging();
			entity.Venta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Caja")]
	public partial class Caja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NombreCaja;
		
		private string _Direccion;
		
		private string _Departamento;
		
		private int _AlmacenId;
		
		private EntitySet<Venta> _Venta;
		
		private EntityRef<Almacen> _Almacen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreCajaChanging(string value);
    partial void OnNombreCajaChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnDepartamentoChanging(string value);
    partial void OnDepartamentoChanged();
    partial void OnAlmacenIdChanging(int value);
    partial void OnAlmacenIdChanged();
    #endregion
		
		public Caja()
		{
			this._Venta = new EntitySet<Venta>(new Action<Venta>(this.attach_Venta), new Action<Venta>(this.detach_Venta));
			this._Almacen = default(EntityRef<Almacen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCaja", DbType="NChar(50)")]
		public string NombreCaja
		{
			get
			{
				return this._NombreCaja;
			}
			set
			{
				if ((this._NombreCaja != value))
				{
					this.OnNombreCajaChanging(value);
					this.SendPropertyChanging();
					this._NombreCaja = value;
					this.SendPropertyChanged("NombreCaja");
					this.OnNombreCajaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departamento", DbType="NVarChar(150)")]
		public string Departamento
		{
			get
			{
				return this._Departamento;
			}
			set
			{
				if ((this._Departamento != value))
				{
					this.OnDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._Departamento = value;
					this.SendPropertyChanged("Departamento");
					this.OnDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlmacenId", DbType="Int NOT NULL")]
		public int AlmacenId
		{
			get
			{
				return this._AlmacenId;
			}
			set
			{
				if ((this._AlmacenId != value))
				{
					if (this._Almacen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlmacenIdChanging(value);
					this.SendPropertyChanging();
					this._AlmacenId = value;
					this.SendPropertyChanged("AlmacenId");
					this.OnAlmacenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Caja_Venta", Storage="_Venta", ThisKey="Id", OtherKey="CajaId")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Almacen_Caja", Storage="_Almacen", ThisKey="AlmacenId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Almacen Almacen
		{
			get
			{
				return this._Almacen.Entity;
			}
			set
			{
				Almacen previousValue = this._Almacen.Entity;
				if (((previousValue != value) 
							|| (this._Almacen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Almacen.Entity = null;
						previousValue.Caja.Remove(this);
					}
					this._Almacen.Entity = value;
					if ((value != null))
					{
						value.Caja.Add(this);
						this._AlmacenId = value.Id;
					}
					else
					{
						this._AlmacenId = default(int);
					}
					this.SendPropertyChanged("Almacen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Caja = this;
		}
		
		private void detach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Caja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRolChanging(string value);
    partial void OnRolChanged();
    #endregion
		
		public Roles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlmacenProducto")]
	public partial class AlmacenProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AlmacenId;
		
		private int _ProductoId;
		
		private decimal _Stock;
		
		private string _ValorUnidad;
		
		private EntityRef<Almacen> _Almacen;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAlmacenIdChanging(int value);
    partial void OnAlmacenIdChanged();
    partial void OnProductoIdChanging(int value);
    partial void OnProductoIdChanged();
    partial void OnStockChanging(decimal value);
    partial void OnStockChanged();
    partial void OnValorUnidadChanging(string value);
    partial void OnValorUnidadChanged();
    #endregion
		
		public AlmacenProducto()
		{
			this._Almacen = default(EntityRef<Almacen>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlmacenId", DbType="Int NOT NULL")]
		public int AlmacenId
		{
			get
			{
				return this._AlmacenId;
			}
			set
			{
				if ((this._AlmacenId != value))
				{
					if (this._Almacen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlmacenIdChanging(value);
					this.SendPropertyChanging();
					this._AlmacenId = value;
					this.SendPropertyChanged("AlmacenId");
					this.OnAlmacenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoId", DbType="Int NOT NULL")]
		public int ProductoId
		{
			get
			{
				return this._ProductoId;
			}
			set
			{
				if ((this._ProductoId != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductoIdChanging(value);
					this.SendPropertyChanging();
					this._ProductoId = value;
					this.SendPropertyChanged("ProductoId");
					this.OnProductoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Decimal(18,0) NOT NULL")]
		public decimal Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorUnidad", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ValorUnidad
		{
			get
			{
				return this._ValorUnidad;
			}
			set
			{
				if ((this._ValorUnidad != value))
				{
					this.OnValorUnidadChanging(value);
					this.SendPropertyChanging();
					this._ValorUnidad = value;
					this.SendPropertyChanged("ValorUnidad");
					this.OnValorUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Almacen_AlmacenProducto", Storage="_Almacen", ThisKey="AlmacenId", OtherKey="Id", IsForeignKey=true)]
		public Almacen Almacen
		{
			get
			{
				return this._Almacen.Entity;
			}
			set
			{
				Almacen previousValue = this._Almacen.Entity;
				if (((previousValue != value) 
							|| (this._Almacen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Almacen.Entity = null;
						previousValue.AlmacenProducto.Remove(this);
					}
					this._Almacen.Entity = value;
					if ((value != null))
					{
						value.AlmacenProducto.Add(this);
						this._AlmacenId = value.Id;
					}
					else
					{
						this._AlmacenId = default(int);
					}
					this.SendPropertyChanged("Almacen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_AlmacenProducto", Storage="_Producto", ThisKey="ProductoId", OtherKey="Id", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.AlmacenProducto.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.AlmacenProducto.Add(this);
						this._ProductoId = value.Id;
					}
					else
					{
						this._ProductoId = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Almacen")]
	public partial class Almacen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Almacen1;
		
		private string _Direccion;
		
		private string _Ruc;
		
		private string _Telefono;
		
		private string _TelefonoDos;
		
		private string _Email;
		
		private EntitySet<Caja> _Caja;
		
		private EntitySet<AlmacenProducto> _AlmacenProducto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAlmacen1Changing(string value);
    partial void OnAlmacen1Changed();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnRucChanging(string value);
    partial void OnRucChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnTelefonoDosChanging(string value);
    partial void OnTelefonoDosChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Almacen()
		{
			this._Caja = new EntitySet<Caja>(new Action<Caja>(this.attach_Caja), new Action<Caja>(this.detach_Caja));
			this._AlmacenProducto = new EntitySet<AlmacenProducto>(new Action<AlmacenProducto>(this.attach_AlmacenProducto), new Action<AlmacenProducto>(this.detach_AlmacenProducto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Almacen", Storage="_Almacen1", DbType="NVarChar(100)")]
		public string Almacen1
		{
			get
			{
				return this._Almacen1;
			}
			set
			{
				if ((this._Almacen1 != value))
				{
					this.OnAlmacen1Changing(value);
					this.SendPropertyChanging();
					this._Almacen1 = value;
					this.SendPropertyChanged("Almacen1");
					this.OnAlmacen1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(150)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ruc", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
		public string Ruc
		{
			get
			{
				return this._Ruc;
			}
			set
			{
				if ((this._Ruc != value))
				{
					this.OnRucChanging(value);
					this.SendPropertyChanging();
					this._Ruc = value;
					this.SendPropertyChanged("Ruc");
					this.OnRucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonoDos", DbType="NVarChar(10)")]
		public string TelefonoDos
		{
			get
			{
				return this._TelefonoDos;
			}
			set
			{
				if ((this._TelefonoDos != value))
				{
					this.OnTelefonoDosChanging(value);
					this.SendPropertyChanging();
					this._TelefonoDos = value;
					this.SendPropertyChanged("TelefonoDos");
					this.OnTelefonoDosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Almacen_Caja", Storage="_Caja", ThisKey="Id", OtherKey="AlmacenId")]
		public EntitySet<Caja> Caja
		{
			get
			{
				return this._Caja;
			}
			set
			{
				this._Caja.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Almacen_AlmacenProducto", Storage="_AlmacenProducto", ThisKey="Id", OtherKey="AlmacenId")]
		public EntitySet<AlmacenProducto> AlmacenProducto
		{
			get
			{
				return this._AlmacenProducto;
			}
			set
			{
				this._AlmacenProducto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Caja(Caja entity)
		{
			this.SendPropertyChanging();
			entity.Almacen = this;
		}
		
		private void detach_Caja(Caja entity)
		{
			this.SendPropertyChanging();
			entity.Almacen = null;
		}
		
		private void attach_AlmacenProducto(AlmacenProducto entity)
		{
			this.SendPropertyChanging();
			entity.Almacen = this;
		}
		
		private void detach_AlmacenProducto(AlmacenProducto entity)
		{
			this.SendPropertyChanging();
			entity.Almacen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Producto1;
		
		private int _Stock;
		
		private int _CategoriaId;
		
		private System.Nullable<decimal> _PrecioCompra;
		
		private System.Nullable<decimal> _PrecioVenta;
		
		private string _CodigoBarra;
		
		private EntitySet<VentaProducto> _VentaProducto;
		
		private EntitySet<AlmacenProducto> _AlmacenProducto;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProducto1Changing(string value);
    partial void OnProducto1Changed();
    partial void OnStockChanging(int value);
    partial void OnStockChanged();
    partial void OnCategoriaIdChanging(int value);
    partial void OnCategoriaIdChanged();
    partial void OnPrecioCompraChanging(System.Nullable<decimal> value);
    partial void OnPrecioCompraChanged();
    partial void OnPrecioVentaChanging(System.Nullable<decimal> value);
    partial void OnPrecioVentaChanged();
    partial void OnCodigoBarraChanging(string value);
    partial void OnCodigoBarraChanged();
    #endregion
		
		public Producto()
		{
			this._VentaProducto = new EntitySet<VentaProducto>(new Action<VentaProducto>(this.attach_VentaProducto), new Action<VentaProducto>(this.detach_VentaProducto));
			this._AlmacenProducto = new EntitySet<AlmacenProducto>(new Action<AlmacenProducto>(this.attach_AlmacenProducto), new Action<AlmacenProducto>(this.detach_AlmacenProducto));
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Producto", Storage="_Producto1", DbType="NVarChar(100)")]
		public string Producto1
		{
			get
			{
				return this._Producto1;
			}
			set
			{
				if ((this._Producto1 != value))
				{
					this.OnProducto1Changing(value);
					this.SendPropertyChanging();
					this._Producto1 = value;
					this.SendPropertyChanged("Producto1");
					this.OnProducto1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int NOT NULL")]
		public int Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaId", DbType="Int NOT NULL")]
		public int CategoriaId
		{
			get
			{
				return this._CategoriaId;
			}
			set
			{
				if ((this._CategoriaId != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaIdChanging(value);
					this.SendPropertyChanging();
					this._CategoriaId = value;
					this.SendPropertyChanged("CategoriaId");
					this.OnCategoriaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioCompra", DbType="Money")]
		public System.Nullable<decimal> PrecioCompra
		{
			get
			{
				return this._PrecioCompra;
			}
			set
			{
				if ((this._PrecioCompra != value))
				{
					this.OnPrecioCompraChanging(value);
					this.SendPropertyChanging();
					this._PrecioCompra = value;
					this.SendPropertyChanged("PrecioCompra");
					this.OnPrecioCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioVenta", DbType="Money")]
		public System.Nullable<decimal> PrecioVenta
		{
			get
			{
				return this._PrecioVenta;
			}
			set
			{
				if ((this._PrecioVenta != value))
				{
					this.OnPrecioVentaChanging(value);
					this.SendPropertyChanging();
					this._PrecioVenta = value;
					this.SendPropertyChanged("PrecioVenta");
					this.OnPrecioVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoBarra", DbType="NVarChar(50)")]
		public string CodigoBarra
		{
			get
			{
				return this._CodigoBarra;
			}
			set
			{
				if ((this._CodigoBarra != value))
				{
					this.OnCodigoBarraChanging(value);
					this.SendPropertyChanging();
					this._CodigoBarra = value;
					this.SendPropertyChanged("CodigoBarra");
					this.OnCodigoBarraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_VentaProducto", Storage="_VentaProducto", ThisKey="Id", OtherKey="ProductoId")]
		public EntitySet<VentaProducto> VentaProducto
		{
			get
			{
				return this._VentaProducto;
			}
			set
			{
				this._VentaProducto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_AlmacenProducto", Storage="_AlmacenProducto", ThisKey="Id", OtherKey="ProductoId")]
		public EntitySet<AlmacenProducto> AlmacenProducto
		{
			get
			{
				return this._AlmacenProducto;
			}
			set
			{
				this._AlmacenProducto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Categoria", ThisKey="CategoriaId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._CategoriaId = value.Id;
					}
					else
					{
						this._CategoriaId = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VentaProducto(VentaProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto1 = this;
		}
		
		private void detach_VentaProducto(VentaProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto1 = null;
		}
		
		private void attach_AlmacenProducto(AlmacenProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_AlmacenProducto(AlmacenProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
}
#pragma warning restore 1591
